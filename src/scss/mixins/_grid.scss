@use "breakpoint" as *;
@use "../functions/functions" as *;

@mixin generate-columns {
  $postfixes: var(column-postfix);
  $column-count: var(grid-columnCount);

  @each $name, $postfix in $postfixes {
    @for $i from 1 through $column-count {
      .#{var(column-classname)}--#{$postfix}-#{$i} {
        @include set-column-width($postfix, $i);
      }
    }
  }
}

@mixin generate-container {
  .#{var(container-classname)} {
    box-sizing: border-box;
    display: flex;
    flex: 0 1 auto;
    flex-flow: row wrap;
    margin: 0 auto;
    padding: var(container-padding-default);
    position: relative;
    max-width: var(container-maxWidth);

    @include desktop-up {
      padding: var(container-padding-desktop);
    }
  }
}

@mixin set-column-width($viewport, $column) {
  $width: 100% * $column / var(grid-columnCount);
  $number: convert-string-to-number($viewport);

  @if $number == 1 {
    width: $width;
  } @else if $number == 2 {
    @include desktop-up {
      width: $width;
    }
  }
}

@mixin column-default-style {
  .#{var(container-classname)} > [class^="#{var(column-classname)}"] {
    box-sizing: border-box;
    padding: var(column-padding-default);
    position: relative;

    @include desktop-up {
      padding: var(column-padding-desktop);
    }
  }
}